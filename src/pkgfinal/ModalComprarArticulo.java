/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pkgfinal;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author juandiaz
 */
public class ModalComprarArticulo extends javax.swing.JFrame {

    /**
     * Creates new form ModalComprarArticulo
     */
    public ModalComprarArticulo() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        inputCodigoProductoCompra = new javax.swing.JTextField();
        inputCantidadProdcutoCompra = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnModalCompraCancelar = new javax.swing.JButton();
        btnModalCompraAceptar = new javax.swing.JButton();
        mensajeERROR = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 0));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("PANEL DE COMPRA");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel1)
                .addContainerGap(41, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        jLabel2.setText("Codigo del artículo a comprar: ");

        inputCodigoProductoCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputCodigoProductoCompraActionPerformed(evt);
            }
        });

        jLabel3.setText("Cantidad a comprar:");

        btnModalCompraCancelar.setText("Cancelar");
        btnModalCompraCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModalCompraCancelarActionPerformed(evt);
            }
        });

        btnModalCompraAceptar.setText("Comprar");
        btnModalCompraAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModalCompraAceptarActionPerformed(evt);
            }
        });

        mensajeERROR.setForeground(new java.awt.Color(204, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(inputCantidadProdcutoCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(inputCodigoProductoCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(btnModalCompraAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnModalCompraCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(mensajeERROR)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inputCodigoProductoCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inputCantidadProdcutoCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnModalCompraAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnModalCompraCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(mensajeERROR)
                .addGap(0, 29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inputCodigoProductoCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputCodigoProductoCompraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputCodigoProductoCompraActionPerformed

    private void btnModalCompraCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModalCompraCancelarActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_btnModalCompraCancelarActionPerformed

    private void btnModalCompraAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModalCompraAceptarActionPerformed

        if (validaciones()) {

            mensajeERROR.setText("");

            //hace la compra del articulo, para eso reduce la cantidad del inventario o lo elimina de la lista si se acaba la existencia
            String url = "listadoArticulo.csv";
            String idProdcuto = inputCodigoProductoCompra.getText().trim();
            int cantidad = Integer.parseInt(inputCantidadProdcutoCompra.getText().trim());
            String idCompra = generadorDeCodigo();
            String datosCompra = "";
            datosCompra = LecturaEscritura.RealizarCompra(url, idProdcuto, cantidad, idCompra, datosCompra);

            // 
            // Registra la compra en su archivo correspondiente
            LecturaEscritura.RegistrarDato("listadoDeCompra.csv", datosCompra);
            this.setVisible(false);
        }
    }//GEN-LAST:event_btnModalCompraAceptarActionPerformed

    public boolean validaciones() {

        if (inputCodigoProductoCompra.getText().trim().length() <= 0) {
            mensajeERROR.setText("Se requiere el codigo del artículo");
            return false;
        }

        if (inputCantidadProdcutoCompra.getText().trim().length() <= 0) {
            mensajeERROR.setText("Se requiere la cantidad");
            return false;
        }

        if (inputCodigoProductoCompra.getText().trim().matches("^([0-9])*$") && inputCantidadProdcutoCompra.getText().trim().matches("^([0-9])*$")) {

            String idProdcuto = inputCodigoProductoCompra.getText().trim();
            int cantidad = Integer.parseInt(inputCantidadProdcutoCompra.getText().trim());

            boolean existeElproducto = false;
            boolean haySuficienteInventario = false;

            // Busca en el listadoArticulo.csv si se cuentra el prodcuto 
            File ruta = new File("listadoArticulo.csv");
            FileReader lectorArticulos;
            try {
                lectorArticulos = new FileReader(ruta);
                BufferedReader bf = new BufferedReader(lectorArticulos);
                String linea = bf.readLine();
                String[] datosProducto;

                while (linea != null) {
                    datosProducto = linea.split(";");
                    if (datosProducto[0].equals(idProdcuto)) {
                        existeElproducto = true;
                        if (Integer.parseInt(datosProducto[4]) >= cantidad) {
                            haySuficienteInventario = true;

                        }
                    }

                    linea = bf.readLine();
                }
                lectorArticulos.close();

                if (!haySuficienteInventario) {
                    mensajeERROR.setText("Se superó la cantidad disponible");
                }

                if (!existeElproducto) {
                    mensajeERROR.setText("No se encuentra el artículo");
                }

            } catch (FileNotFoundException ex) {
                Logger.getLogger(LoginPage.class
                        .getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(LoginPage.class
                        .getName()).log(Level.SEVERE, null, ex);
            }

            return existeElproducto && haySuficienteInventario;
        }
        mensajeERROR.setText("solo se permite numeros");
        return false;
    }

    public String generadorDeCodigo() {
        int numero = (int) (Math.random() * (9000 - 1000) + 1000);
        return String.valueOf(numero);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModalComprarArticulo.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModalComprarArticulo.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModalComprarArticulo.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModalComprarArticulo.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ModalComprarArticulo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnModalCompraAceptar;
    private javax.swing.JButton btnModalCompraCancelar;
    private javax.swing.JTextField inputCantidadProdcutoCompra;
    private javax.swing.JTextField inputCodigoProductoCompra;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel mensajeERROR;
    // End of variables declaration//GEN-END:variables
}
